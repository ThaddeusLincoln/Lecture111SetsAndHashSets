Sets are less used than list and maps. While a list is an ordered collection of items 
(which means that the insertion order is kept) that can contain duplicates. 

Sets:
1. Have no define order (Oracle defines it as chaotic)
2. It can not contain duplicates

TIP : there are ordered sets such as LinkedHashSets and TreeSet

NOTE : you can check if an item exists in the set, using the contains() method,
but there's no way of retrieving an specific item.

The best implementation of the Set interface is the HashSet class, which uses hashes to to store items. 
HashSets are just like HashMaps, actually since Java 8 the implementation currently uses a HashMap, 
so a mapping between sets and HashMaps is possible, and whenever an element is added to the set it 
becomes a key in the underlying HashMap and a dummy object is stored as the  value. 
Sets are useful :
1 - because operations on them are really fast.
2 - because maintaining its Mathematical definition it allows the operations of intersection
and union which is cool). 

In sets theory a union of 2 or more sets is a set containing all the elements of the sets,
so because sets don't contain duplicates each element in a union will only appear once even
if it was present in more than one of the sets. To generate a union we can use the addAll() method.

NOTE : a reference to a String is exactly the same size as the reference to any other object. Besides Java 7
uses compressed pointers that can even end up using less space than 32 bit int. Check out:

https://docs.oracle.com/javase/8/docs/technotes/guides/vm/performance-enhancements-7.html



 

